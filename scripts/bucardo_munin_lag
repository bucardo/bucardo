#!/usr/bin/perl
# -*- perl -*-

=head1 NAME

bucardo_lag - Munin plugin to display Bucardo replication lag.

=head1 APPLICABLE SYSTEMS

Any Bucardo platform

=head1 CONFIGURATION

  [bucardo*]
     user root
#     env.bucardo_bin <optional-override-of-bucardo-path>

It is most usual that root must run the bucardo status command.

Only use the .env settings if you need to override the defaults.

=head1 INTERPRETATION

To Be Written

=head1 BUGS

None known

=head1 AUTHOR

Copyright 2013 Mike Tonks

=head1 LICENSE

GPLv2

=cut

use strict;

my $BUCARDO_BIN    = $ENV{bucardo_bin} || "bucardo";
my $LIST_COMMAND   = "$BUCARDO_BIN list sync";
my $STATUS_COMMAND = "$BUCARDO_BIN status";

my $WANTED = "Lag seconds/deltas";

my $mode = shift();

if ($mode eq 'config') {
    print_config();
    #exit();
} elsif ($mode eq 'autoconf') {
    unless (test_service() ) {
        print "yes\n";
    } else {
        print "no\n";
    }
    exit 0;
}


my $syncs = get_syncs();

#die "No syncs found" unless scalar @$syncs > 0;

foreach my $sync (@$syncs) {

  if ($mode eq 'config') {
    print ("${sync}_lag_seconds.label $sync seconds\n");
    print ("${sync}_lag_deltas.label $sync deltas\n");
  }
  else {
    open(SERVICE, "$STATUS_COMMAND $sync |")
      or die("Could not execute '$LIST_COMMAND $sync': $!");

    while (<SERVICE>) {
      my ($k, $v) = (m/^(.*?)\s+\:\s(.*)$/);
      next unless ($k);
      if ($k eq $WANTED) {
warn "VVV: $v";
        my ($seconds, $deltas) = ($v =~ m/^(.*) \/ (.*)$/);
        print("${sync}_lag_seconds.value $seconds\n");
        print("${sync}_lag_deltas.value $deltas\n");
      }
    }
    close(SERVICE);
  }
}


sub print_config {

    my $num = 0;

    print("graph_title Bucardo replication lag
graph_args --base 1000
graph_vlabel queries / \${graph_period}
graph_category bucardo
graph_info ...
graph_total total\n");

}


sub test_service {
    system ("$BUCARDO_BIN --version >/dev/null 2>/dev/null");
    if ($? == 0) {
		system ("$STATUS_COMMAND >/dev/null 2>/dev/null");
		if ($? == 0) {
		    print "yes\n";
		}
		else {
		    print "no (could not connect to bucardo)\n";
		}
    }
    else {
		print "no (bucardo not found)\n";
    }
    exit 0;
}

sub get_syncs {

	my $syncs = [];

	open(SERVICE, "$LIST_COMMAND |")
	  or die("Could not execute '$LIST_COMMAND': $!");

	while (<SERVICE>) {
	    my ($sync) = (m/Sync: (\w+)/);
	    push @$syncs, $sync if $sync;
	}

	close(SERVICE);

	return $syncs;
}

